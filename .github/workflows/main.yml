name: Build and Push Docker Images

on:
  push:
    branches: [ "main" ]  # 可以根据需要修改触发分支
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:  # 支持手动触发

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Login to Aliyun Container Registry
      uses: docker/login-action@v2
      with:
        registry: registry.cn-shenzhen.aliyuncs.com  # 替换为你的阿里云仓库地址
        username: ${{ secrets.ALIYUN_USERNAME }}  # 阿里云账号
        password: ${{ secrets.ALIYUN_PASSWORD }}  # 阿里云密码或访问令牌

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc /etc/mysql /etc/php
        sudo -E apt-get -y purge azure-cli* docker* ghc* zulu* hhvm* llvm* firefox* google* dotnet* aspnetcore* powershell* openjdk* adoptopenjdk* mysql* php* mongodb* moby* snap* || true
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install libfuse-dev $(curl -fsSL git.io/depends-ubuntu-2204)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        #sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Free up disk space
      run: |
        echo "Before cleanup:"
        df -h
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /opt/ghc
        echo "After cleanup:"
        df -h

    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Grant write permissions to /mnt
      run: |
        sudo chmod -R 777 /mnt      

    - name: Create build directory on /mnt
      run: sudo mkdir -p /mnt/tmp


      
    - name: Use temporary directory
      run: export TMPDIR=/mnt/tmp

        
    - name: Build and push Docker images
      env:
        DOCKER_OPTS: "--data-root=/mnt/docker"
      run: |
          docker info
          #image_name="registry.cn-hangzhou.aliyuncs.com/sync_dockerhub/$service:latest"
          # 构建和推送
          docker login -u ${{ secrets.ALIYUN_USERNAME }}  -p ${{ secrets.ALIYUN_PASSWORD }} registry.cn-hangzhou.aliyuncs.com
          docker compose build
          docker compose push
